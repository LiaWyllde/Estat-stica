# -*- coding: utf-8 -*-
"""AtividadeEmSala.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u2ef-sp3wVI922MR-mSvQINXOfKCEb6y
"""

import numpy as np
import pandas as pd
from collections import Counter

import warnings
warnings.filterwarnings('ignore')

from scipy.stats import binom

# Questão 1

dados = pd.read_csv('/content/drive/MyDrive/Estatística Aplicada/heart.csv', sep=',', encoding='iso-8859-1')

print(f'A quantidade total de registros é: {len(dados)}')

# Questão 2

mediaIdade = dados['Age'].mean()
print (f' Media das idades: {mediaIdade:.2f}')

medianaIdade = dados['Age'].median()
print (f" Mediana das idades: {medianaIdade:.2f}")

modaIdade = Counter(dados['Age']).most_common(1)
print (f" Moda das idades: {modaIdade}")

desvioPadraoIdade = dados['Age'].std()
print (f" Desvio padrão: {desvioPadraoIdade:.2f}")

varianciaIdade = dados['Age'].var()
print (f" Variância das idades: {varianciaIdade:.2f}")

# Questão 3

from matplotlib import pyplot as plt
import seaborn as sns

sns.histplot(dados['Age'], kde=True)

"""

```
# Questão 4

Sim, por se tratarem de valores próximos, há a representação adequada da centralidade dos dados
```

"""

# Questão 5

sexoParticipantes = dados['Sex'].value_counts()
print(f'Quantidade de participantes por sexo: \n{sexoParticipantes}')

feminino = (sexoParticipantes[0]/len(dados))*100
masculino = (sexoParticipantes[1]/len(dados))*100

print(f'\nPorcentagem de participantes por sexo: \nFeminino: {feminino:.2f}%\nMasculino: {masculino:.2f}% \n')

# Questão 6

#Colesterol

maxColesterol = dados['Cholesterol'].max()
minColesterol = dados['Cholesterol'].min()

print(f'O valor máximo de colesterol é: {maxColesterol}')
print(f'O valor mínimo de colesterol é: {minColesterol}')


#Quartis

qColesterol = dados['Cholesterol'].quantile([0.25, 0.5, 0.75])
print(f'\nOs quartis de colesterol são: \nQ1: {qColesterol[0.25]}\nQ2: {qColesterol[0.5]}\nQ3: {qColesterol[0.75]}')

sns.boxplot(dados['Cholesterol'])

"""

```
# Questão 7

Sim, a variável possui outliers e, no caso do estudo, podem indicar um paciente que necessita de acompanhamento qualificado. O valor deve ser mantido para indicar a incidência desse tipo de caso.
```

"""

# Questão 8

selecao = dados[(dados['Sex'] == 'F') & (dados ['Age'] < 35)]

probabilidade = len(selecao)/len(dados)

print(f"A probabilidade de sortear é: {probabilidade}")
print(f"A arredondando: {probabilidade:.3f}")

# Questão 9

selecao2 = dados[(dados ['Age'] >= 20) & (dados ['Age'] <=  35)]

probabilidade2 = len(selecao2)/len(dados)

print(f"A probabilidade de sortear é: {probabilidade2}")
print(f"A arredondando: {probabilidade2:.3f}")

# Questão 10

probabilidadeDoenca = dados.HeartDisease.value_counts(normalize=True)[1]

sorteios = 20
quantidade = 8

probabilidadeD = (binom.cdf(quantidade, sorteios, probabilidadeDoenca))

print(f"A probabilidade de saírem até 8 pessoas com doença cardíaca em 20 sorteios é: {probabilidadeD}")
print(f"A arredondando: {probabilidadeD:.3f}")

# Questão 11

fAbsoluta = dados['ChestPainType'].value_counts()
print(f'Frequência absoluta: \n{fAbsoluta}')

fRelativa = dados['ChestPainType'].value_counts(normalize=True)